// Compass Cross-Browser Support Configuration

// You can configure the compass default browser support matrix by setting these variables as needed.
// http://compass-style.org/reference/compass/support/

$legacy-support-for-ie: false; // Usually compass hacks apply to both ie6 & 7 -- set this to false to disable support for both.
$legacy-support-for-ie6: $legacy-support-for-ie; // Setting this to false will result in smaller output, but no support for ie6 hacks
$legacy-support-for-ie7: $legacy-support-for-ie; // Setting this to false will result in smaller output, but no support for ie7 hacks
$legacy-support-for-ie8: $legacy-support-for-ie; // Setting this to false will result in smaller output, but no support for legacy ie8 hacks

$experimental-support-for-mozilla: true; // Support for mozilla in experimental css3 properties (-moz).
$experimental-support-for-webkit: true; // Support for webkit in experimental css3 properties (-webkit).
$experimental-support-for-opera: false; // Support for opera in experimental css3 properties (-o).
$experimental-support-for-microsoft: false; // Support for microsoft in experimental css3 properties (-ms).
$experimental-support-for-khtml: false; // Support for khtml in experimental css3 properties (-khtml).

$experimental-support-for-svg: false; // Support for svg in experimental css3 properties. Setting this to true might add significant size to your generated stylesheets.
$experimental-support-for-pie: false; //Support for CSS PIE in experimental css3 properties (-pie).

$support-for-original-webkit-gradients: false; // Support for webkit's original (non-standard) gradient syntax.

$legacy-support-for-mozilla: false; // Whether to output legacy support for mozilla. Usually this means hacks to support Firefox 3.6 or earlier.

@import "compass/support";

// Vertical rhythm

// Create a vertical rhythm for your site by setting the $base-font-size and $base-line-height variables and then including the establish-baseline mixin at the root of your document.
// http://compass-style.org/reference/compass/typography/vertical_rhythm/

$base-font-size: 16px; // The base font size.
$base-line-height: 8px; // The base line height determines the basic unit of vertical rhythm.
$default-rhythm-border-style: solid; // Set the default border style for rhythm borders.
$relative-font-sizing: true; // Set to false if you want to use absolute pixels in sizing your typography.
$round-to-nearest-half-line: false;
$min-line-padding: 1px; // Ensure there is at least this many pixels of vertical padding above and below the text.
//$font-unit: $base-font-size;
$base-rhythm-unit: $base-line-height; // The basic unit of font rhythm.

@import "compass/typography/vertical_rhythm";

// Typography

$times-new-roman:       "Times New Roman", Times, Georgia, "DejaVu Serif", serif !default;
$times:                 Times, "Times New Roman", Georgia, "DejaVu Serif", serif !default;
$georgia:               Georgia, "Times New Roman", "DejaVu Serif", serif !default;
$verdana:               Verdana, Tahoma, "DejaVu Sans", sans-serif !default;
$tahoma:                Tahoma, Verdana, "DejaVu Sans", sans-serif !default;
$helvetica:             Helvetica, Arial, "Nimbus Sans L", sans-serif !default;
$arial:                 Arial, Helvetica, "Nimbus Sans L", sans-serif !default;
$courier:               "Courier New", "DejaVu Sans Mono", monospace, sans-serif !default;
$menlo:                 Menlo, Monaco, Consolas, "Courier New", monospace !default;

// Custom font stacks

$topaz:                 "Topaz", sans-serif;

// Assign font stacks

$sans-font-family:      $helvetica;
$serif-font-family:     $georgia;
$mono-font-family:      $menlo;
$alt-font-family:       $serif-font-family;

$base-font-family:      $topaz; // The font family set on the html element.

$headings-font-family:  $helvetica;
$headings-font-weight:  normal !default; // instead of browser default, bold
$headings-color:        inherit !default; // empty to use BS default, $textColor

$font-smoothing:        true;

// Grays

$black:                 #000;
$gray-darker:           #222;
$gray-dark:             #333;
$gray:                  rgba(#aaa, 1);
$gray-light:            #999;
$gray-lighter:          #eee;
$white:                 #fff;

// Accent colors

$blue:                  rgba(#6687ba, 1);
$blue-dark:             #0064cd;
$green:                 #46a546;
$red:                   #9d261d;
$yellow:                #ffc40d;
$orange:                #f89406;
$pink:                  #c3325f;
$purple:                #7a43b6;

$primary-color:         #2ba6cb;
$secondary-color:       #e9e9e9;
$alert-color:           #c60f13;
$success-color:         #5da423;

// Scaffolding

$body-background:       $gray !default;
$text-color:            $black !default;

// Links

$link-color:            $black !default;
$link-color-hover:      $black !default;

// Variables

$link:                  '&:link, &:visited';
$hover:                 '&:focus, &:hover, &:active';
$headings:              'h1, h2, h3, h4, h5, h6';
$type:                  'h1, h2, h3, h4, h5, h6, p, ul, ol, table, form';

// Media Queries

// $small-screen: 768px;
// $medium-screen: 1280px;
// $large-screen: 1440px;

// $screen: "only screen";
// $small: "only screen and (min-width: #{$small-screen})";
// $medium: "only screen and (min-width: #{$medium-screen})";
// $large: "only screen and (min-width: #{$large-screen})";
// $landscape: "only screen and (orientation: landscape)";
// $portrait: "only screen and (orientation: portrait)";

// Cursors

// Custom use example -> $cursor-default-value: url(http://cursors-site.net/path/to/custom/cursor/default.cur),progress;

// $cursor-crosshair-value: "crosshair";
// $cursor-default-value: "default";
// $cursor-pointer-value: "pointer";
// $cursor-help-value: "help";

// Susy settings

// Responsive grids for Compass.
// susy.oddbird.net/guides/reference/

// The total number of columns in the grid
$total-columns: 12              !default;

// The width of columns and gutters.
// These must all be set with the comparable units.
$column-width: 4em             !default;
$gutter-width: 1em             !default;

// Padding on the left and right of a Grid Container.
$grid-padding: $gutter-width   !default;

// ---------------------------------------------------------------------------
// Advanced Settings

// From Direction:
// Controls for right-to-left or bi-directional sites.
$from-direction:               left !default;

// Omega Float Direction:
// The direction that +omega elements are floated by deafult.
$omega-float:                   opposite-position($from-direction) !default;

// Container Width:
// Override the total width of your grid, using any length (50em, 75%, etc.)
$container-width:               false !default;

// Container Style:
// 'magic'  - Static (fixed or elastic) when there's enough space,
//            fluid when there isn't. This is the SUSY MAGIC SAUCE(TM).
// 'static' - Forces the grid container to remain static at all times.
// 'fluid'  - Forces the grid to remain fluid at all times.
//            (this will overrule any static $container-width settings)
$container-style: magic          !default;

// Border-Box Sizing
// Adjust the grid math appropriately for box-sizing: border-box;
// Warning: This does not actually apply the new box model!
// In most cases you can ignore this setting,
// and simply apply the border-box-sizing mixin.
$border-box-sizing: false        !default;


// IE Settings

// When you are using a seperate IE stylesheet,
// you can use these settings to control the output of at-breakpoint.
// By default, at-breakpoint will output media-queries as well as
// any defined ie-fallback classes.

$breakpoint-media-output: true; // Turn off media-query output for IE-only stylesheets.
$breakpoint-ie-output: true; // Turn off media-query fallback output for non-IE stylesheets.

// Danger Zone! Only set as 'true' in IE-specific style sheets.
$breakpoint-raw-output: false; // Pass through raw output without media-queries or fallback classes for IE-only stylesheets.

@import "susy";

// Modular Scale

// Modular Scale is a Sass based mixin that calculates the incremental values of the modular scale in proportion to a set size and ratio. It was inspired by and adapted from Tim Brown's modularscale.com.
// https://github.com/Team-Sass/modular-scale

//$ratio: 1.618;
@import "modular-scale";

$border-color: $gray;

$inline-block-alignment: middle;

@import 'compass/css3'; // Use one CSS3 mixin instead of multiple vendor prefixes.
//@import 'compass/css3/images'; //Provides mixins that work across many modern browsers with the latest CSS3 image rendering primitives.

//@import 'compass/css3/user-interface';

@import 'compass/utilities/general/clearfix';

@import 'compass/typography';
//@import 'compass/typography/text/force-wrap';
//@import 'compass/typography/text/replacement';

//@include establish-baseline;
